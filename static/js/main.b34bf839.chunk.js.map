{"version":3,"sources":["serviceWorker.js","App.js","Sobre.js","Contador.js","Timer.js","Form.js","UserList.js","User.js","Users.js","Routes.js","Http.js","NavBar.js","NotFound.js","Footer.js","index.js"],"names":["Boolean","window","location","hostname","match","Curso","props","cursos","className","map","c","key","App","Sobre","Contador","state","contador","increment","bind","value","this","setState","style","textAlign","marginRight","onClick","Component","Timer","timer","Date","toLocaleTimeString","interval","setInterval","clearInterval","Form","email","password","remember","json","onChange","onSubmit","JSON","stringify","htmlFor","type","placeholder","e","target","checked","marginTop","users","id","nome","User","user","UserList","find","parseInt","params","Users","to","url","path","component","routes","description","exact","persons","axios","get","then","data","name","NavBar","collapsed","toggleNavbar","classOne","classTwo","Routes","r","NotFound","src","width","height","display","margin","position","alt","Footer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b34bf839.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nfunction Curso(props) {\n  const { cursos } = props;\n  return (\n    <div className=\"card\">\n      <ul className=\"list-group list-group-flush\">\n        {cursos.map(c => <li className=\"list-group-item\" key={c}>{c}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"row justify-content-md-center\">\n      <div className=\"col-xl-7 col-lg-8 col-md-9 col-sm-12 col-xs-12\">\n        <Curso cursos={['Java', 'React', 'Angular']} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nfunction Sobre() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <h1>Sobre</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sobre;","import React, { Component } from 'react';\r\n\r\nclass Contador extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contador: 0\r\n        }\r\n\r\n        this.increment = this.increment.bind(this);\r\n    }\r\n\r\n    increment(value) {\r\n        let state = this.state;\r\n        state.contador += value;\r\n\r\n        this.setState(state);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"col-xl-7 col-lg-8 col-md-9 col-sm-12 col-xs-12\">\r\n                    <div className=\"card \">\r\n                        <div className=\"card-body \">\r\n                            <h3 className=\"card-title\" style={{ textAlign: 'center' }}> {this.state.contador}</h3>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <button className=\"btn btn-primary\" style={{ marginRight: '10px' }} onClick={() => this.increment(-1)} >-</button>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.increment(1)}>+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contador;\r\n","import React, { Component } from 'react';\r\n\r\nclass Timer extends Component {\r\n    interval\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            timer: new Date().toLocaleTimeString()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            this.setState({ timer: new Date().toLocaleTimeString() })\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"col-xl-7 col-lg-8 col-md-9 col-sm-12 col-xs-12\">\r\n                    <h3>Timer: {this.state.timer}</h3>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            remember: false,\r\n            json: ''\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(state) {\r\n        this.setState(state);\r\n    }\r\n\r\n    onSubmit() {\r\n        let state = this.state;\r\n        const { email, password, remember } = state;\r\n        state.json = JSON.stringify({ email, password, remember });\r\n        this.setState(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"col-xl-3 col-lg-4 col-md-5 col-sm-6 col-xs-12\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email address:</label>\r\n                        <input type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter email\"\r\n                            value={this.state.email}\r\n                            onChange={(e) => this.onChange({ email: e.target.value })} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"pwd\">Password:</label>\r\n                        <input type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter password\"\r\n                            value={this.state.password}\r\n                            onChange={(e) => this.onChange({ password: e.target.value })} />\r\n                    </div>\r\n                    <div className=\"form-group form-check\">\r\n                        <label className=\"form-check-label\">\r\n                            <input className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                value={this.state.remember}\r\n                                onChange={(e) => this.onChange({ remember: e.target.checked })} /> Remember me\r\n                            </label>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" onClick={() => this.onSubmit()}>Submit</button>\r\n                    <h5 style={{ marginTop: '20px' }}>{this.state.json}</h5>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","const users = [\r\n    { id: 1, nome: 'Paulo', cursos: ['Java', 'Angular'] },\r\n    { id: 2, nome: 'Victor', cursos: ['React', '.Net'] }\r\n]\r\n\r\nexport default users;","import React, { Component } from 'react';\r\nimport UserList from './UserList';\r\n\r\nclass User extends Component {\r\n    render() {\r\n        const { match } = this.props;\r\n\r\n        const user = UserList.find(({ id }) => id === parseInt(match.params.id))\r\n\r\n\r\n        return (\r\n            <div style={{ marginTop: '20px' }}>\r\n                <h3>{user.nome}</h3>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        Cursos\r\n                    </div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {\r\n                            user.cursos.map(c => (\r\n                                <li className=\"list-group-item\" key={c}>{c}</li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport UserList from './UserList';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport User from './User';\r\n\r\n\r\nclass Users extends Component {\r\n    render() {\r\n        const { match } = this.props\r\n\r\n        return (\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"col-xl-7 col-lg-8 col-md-9 col-sm-12 col-xs-12\">\r\n                    <table className=\"table table-striped table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Nome</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                UserList.map(({ id, nome }) => (\r\n                                    <tr key={id}>\r\n                                        <td>\r\n                                            <Link to={`${match.url}/${id}`}>\r\n                                                {id}\r\n                                            </Link>\r\n                                        </td>\r\n                                        <td>{nome}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"col-xl-7 col-lg-8 col-md-9 col-sm-12 col-xs-12\">\r\n                    <Route path={`${match.path}/:id`} component={User} />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import App from './App';\r\nimport Sobre from './Sobre';\r\nimport Contador from './Contador';\r\nimport Timer from './Timer';\r\nimport Form from './Form';\r\nimport Users from './Users';\r\nimport Http from './Http';\r\n\r\nconst routes = [\r\n    { description: 'Home', path: '/', component: App, exact: true },\r\n    { description: 'Contador', path: '/Contador', component: Contador },\r\n    { description: 'Timer', path: '/Timer', component: Timer },\r\n    { description: 'Form', path: '/Form', component: Form },\r\n    { description: 'Users', path: '/Users', component: Users },\r\n    { description: 'Http', path: '/Http', component: Http },\r\n    { description: 'Sobre', path: '/Sobre', component: Sobre }\r\n]\r\n\r\n\r\nexport default routes;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Http extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            persons: []\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get('https://jsonplaceholder.typicode.com/users')\r\n            .then(({ data: persons }) => this.setState({ persons }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"col-xl-7 col-lg-8 col-md-9 col-sm-12 col-xs-12\">\r\n                    <div className=\"card\">\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {this.state.persons.map(({ id, name }) => <li className=\"list-group-item\" key={id}>{name}</li>)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Http;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Routes from './Routes';\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true,\r\n        };\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    }\r\n    toggleNavbar() {\r\n        this.setState({ collapsed: !this.state.collapsed });\r\n    }\r\n    render() {\r\n        const collapsed = this.state.collapsed;\r\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n        const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\r\n                <NavLink className=\"navbar-brand\" to=\"/\">Home</NavLink >\r\n                <button onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className={`${classOne}`}>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        {\r\n                            Routes.map(r => (\r\n                                <li className=\"nav-item\" key={r.path}>\r\n                                    <NavLink className=\"nav-link\" to={r.path}>{r.description}</NavLink >\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src=\"/assets/images/PageNotFound.jpg\" style={{ width: 400, height: 400, display: 'block', margin: 'auto', position: 'relative' }} alt=\"page not found\" />\r\n                <center><Link to=\"/\">Return to Home Page</Link></center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Copyright © 2020 All rights reserved.</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport NavBar from './NavBar'\nimport NotFound from './NotFound';\nimport Routes from './Routes';\nimport Footer from './Footer';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <header>\n            <NavBar />\n        </header>\n        <div className=\"container-fluid\">\n            <Switch>\n                {\n                    Routes.map(r => (\n                        <Route key={r.path} path={r.path} exact={r.exact} component={r.component} />\n                    ))\n                }\n                <Route path=\"*\" component={NotFound} />\n            </Switch>\n        </div>\n        <Footer />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}