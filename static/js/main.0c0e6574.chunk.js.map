{"version":3,"sources":["serviceWorker.js","Pages/Contador/index.js","Pages/Timer/index.js","HttpClient.js","Pages/Http/index.js","Pages/Filmes/index.js","Pages/Sobre/index.js","Pages/Home/index.js","Pages/Exercicio/pessoa.js","Nav.js","Pages/Exercicio/index.js","Auth.js","Components/Header.js","Components/Footer.js","Layouts/DefaultLayout/index.js","Pages/Login/index.js","PrivateRoute.js","AppRoute.js","index.js"],"names":["Boolean","window","location","hostname","match","Contador","props","state","contador","increment","bind","value","this","setState","className","style","textAlign","marginRight","onClick","Component","Timer","timer","Date","toLocaleTimeString","interval","setInterval","clearInterval","source","axios","CancelToken","url","config","get","cancelToken","token","reason","cancel","Http","persons","http","then","data","map","i","id","name","key","Filmes","filmes","nome","foto","src","alt","Sobre","Home","Pessoa","handleClick","max","pessoas","length","idx","Math","floor","random","console","log","pessoa","init","marginBottom","description","path","component","p","localStorage","getItem","removeItem","Header","collapsed","toggleNavbar","logout","Auth","history","push","classOne","classTwo","to","type","Nav","r","cursor","Footer","DefaultLayout","rest","n","from","Login","email","password","remember","onChange","onSubmit","JSON","stringify","htmlFor","placeholder","e","target","checked","PrivateRoute","render","pathname","AppRoute","basename","exact","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"+OAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+DCoBSC,E,YAnCX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,SAAU,GAGd,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAPF,E,uEAUTC,GACN,IAAIJ,EAAQK,KAAKL,MACjBA,EAAMC,UAAYG,EAElBC,KAAKC,SAASN,K,+BAER,IAAD,OACL,OACI,yBAAKO,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,cACX,wBAAIA,UAAU,aAAaC,MAAO,CAAEC,UAAW,WAA/C,IAA6DJ,KAAKL,MAAMC,WAE5E,yBAAKM,UAAU,eACX,4BAAQA,UAAU,kBAAkBC,MAAO,CAAEE,YAAa,QAAUC,QAAS,kBAAM,EAAKT,WAAW,KAAnG,KACA,4BAAQK,UAAU,kBAAkBI,QAAS,kBAAM,EAAKT,UAAU,KAAlE,a,GA3BLU,aC8BRC,E,YA5BX,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTc,OAAO,IAAIC,MAAOC,sBAJP,E,iFAQE,IAAD,OAChBX,KAAKY,SAAWC,aAAY,WACxB,EAAKZ,SAAS,CAAEQ,OAAO,IAAIC,MAAOC,yBACnC,O,6CAIHG,cAAcd,KAAKY,Y,+BAGnB,OACI,yBAAKV,UAAU,OACX,yBAAKA,UAAU,OACX,sCAAYF,KAAKL,MAAMc,a,GAvBvBF,a,yBCAdQ,EAASC,IAAMC,YAAYF,SAMlB,EAJH,SAACG,EAAKC,GAAN,OAAiBH,IAAMI,IAAIF,EAAV,aAAiBG,YAAaN,EAAOO,OAAUH,KAI7D,EAHA,SAAAI,GAAM,OAAIR,EAAOS,OAAOD,ICiCxBE,E,YAjCX,WAAY/B,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACT+B,QAAS,IAJE,E,iFAQE,IAAD,OAChBC,EACS,8CACJC,MAAK,gBAASF,EAAT,EAAGG,KAAH,OAAuB,EAAK5B,SAAS,CAAEyB,iB,6CAIjDC,EAAY,qC,+BAIZ,OACI,yBAAKzB,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,+BACTF,KAAKL,MAAM+B,QAAQI,KAAI,WAAeC,GAAf,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAqB,wBAAI/B,UAAS,0BAAqB6B,EAAI,IAAM,EAAI,4BAA8B,IAAMG,IAAKF,GAAKC,c,GA1BpJ1B,aCEE4B,G,kBAEjB,WAAYzC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTyC,OAAQ,IAHG,E,iFAQE,IAAD,OAChBT,EAAS,oDACJC,MAAK,gBAASQ,EAAT,EAAGP,KAAH,OAAsB,EAAK5B,SAAS,CAAEmC,gB,6CAIhDT,EAAY,qC,+BAIZ,OACI,yBAAKzB,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eAAf,UAGA,wBAAIA,UAAU,+BAENF,KAAKL,MAAMyC,OAAON,KAAI,gBAAGE,EAAH,EAAGA,GAAIK,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OAClB,wBAAIpC,UAAU,kBAAkBgC,IAAKF,GACjC,2BAAIK,GACJ,yBAAKE,IAAKD,EAAMpC,UAAU,gBAAgBsC,IAAKH,gB,GAhCnD9B,cCOrBkC,MAVf,WACI,OACI,yBAAKvC,UAAU,OACX,yBAAKA,UAAU,OACX,4ICODwC,MAXf,WACE,OACE,yBAAKxC,UAAU,OACb,yBAAKA,UAAU,OACb,uCCJayC,E,YAEjB,WAAYjD,GAAQ,IAAD,8BACf,4CAAMA,KAOVkD,YAAc,WACV,IACMC,EAAM,EAAKnD,MAAMoD,QAAQC,OAAO,EAEhCC,EAAMC,KAAKC,MAAMD,KAAKE,UAAYN,EAH5B,EAGwC,GAHxC,GAIZO,QAAQC,IAAIL,GAEZ,EAAK/C,SAAS,CAAEqD,OAAQ,EAAK5D,MAAMoD,QAAQE,MAZ3C,EAAKrD,MAAQ,CACT2D,OAAQ,EAAK5D,MAAM6D,MAJR,E,sEAmBf,OACI,yBAAKrD,UAAU,MAAMC,MAAO,CAAEqD,aAAc,SACxC,yBAAKtD,UAAU,OACX,oCAAUF,KAAKL,MAAM2D,QACrB,4BAAQpD,UAAU,kBAAkBI,QAASN,KAAK4C,aAAlD,iB,GAzBgBrC,aCMpB,GACZ,CAAEkD,YAAa,OAAQC,KAAM,QAASC,UAAWjB,GACjD,CAAEe,YAAa,WAAYC,KAAM,YAAaC,UAAWlE,GACzD,CAAEgE,YAAa,QAASC,KAAM,SAAUC,UAAWnD,GACnD,CAAEiD,YAAa,OAAQC,KAAM,QAASC,UAAWlC,GACjD,CAAEgC,YAAa,SAAUC,KAAM,UAAWC,UAAWxB,GACrD,CAAEsB,YAAa,eAAaC,KAAM,aAAcC,U,2MCThDb,QAAU,CAAC,QAAS,UAAQ,QAAS,S,wEAE3B,IAAD,OACL,OACI,yBAAK5C,UAAU,OACX,yBAAKA,UAAU,OACX,4CACA,6BAEIF,KAAK8C,QAAQhB,KAAI,SAAC8B,EAAG7B,GAAJ,OAAU,kBAAC,EAAD,CAAQG,IAAK0B,EAAGd,QAAS,EAAKA,QAASS,KAAM,EAAKT,QAAQf,c,GAXrExB,cDYpC,CAAEkD,YAAa,QAASC,KAAM,SAAUC,UAAWlB,IEXxC,EAHS,kBAAuC,OAAjCoB,aAAaC,QAAQ,SAGpC,EAJD,SAACjC,GAAD,OAAUgC,aAAahC,KAAOA,GAI7B,EAFA,kBAAMgC,aAAaE,WAAW,SCuD9BC,E,YAjDX,WAAYtE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTsE,WAAW,GAGf,EAAKC,aAAe,EAAKA,aAAapE,KAAlB,gBACpB,EAAKqE,OAAS,EAAKA,OAAOrE,KAAZ,gBAPC,E,4EAUfE,KAAKC,SAAS,CAAEgE,WAAYjE,KAAKL,MAAMsE,c,+BAIvCG,IACApE,KAAKN,MAAM2E,QAAQC,KAAK,Y,+BAGxB,IAAML,EAAYjE,KAAKL,MAAMsE,UACvBM,EAAWN,EAAY,2BAA6B,gCACpDO,EAAWP,EAAY,gDAAkD,sCAE/E,OACI,gCACI,yBAAK/D,UAAU,iDACX,kBAAC,IAAD,CAASA,UAAU,eAAeuE,GAAG,KAArC,QACA,4BAAQnE,QAASN,KAAKkE,aAAchE,UAAS,UAAKsE,GAAYE,KAAK,UAC/D,0BAAMxE,UAAU,yBAEpB,yBAAKA,UAAS,UAAKqE,IACf,wBAAIrE,UAAU,sBAENyE,EAAI7C,KAAI,SAAA8C,GAAC,OACL,wBAAI1E,UAAU,WAAWgC,IAAK0C,EAAElB,MAC5B,kBAAC,IAAD,CAASxD,UAAU,WAAWuE,GAAE,UAAKG,EAAElB,OAASkB,EAAEnB,kBAKlE,yBAAKvD,UAAU,cACX,uBAAGC,MAAO,CAAE0E,OAAQ,WAAa3E,UAAU,oBAAoBI,QAASN,KAAKmE,QAA7E,kB,GA1CP5D,aCGNuE,MAPf,WACI,OACI,gCACI,yECmBGC,MAjBf,YAAqC,IAATC,EAAQ,oBAChC,OACI,6BACI,kBAAC,EAAWA,GACZ,yBAAK9E,UAAU,aACX,kBAAC,IAAD,KAEQyE,EAAI7C,KAAI,SAAAmD,GAAC,OAAI,kBAAC,IAAD,CAAOvB,KAAMuB,EAAEvB,KAAMC,UAAWsB,EAAEtB,UAAWzB,IAAK+C,EAAExB,iBAErE,kBAAC,IAAD,CAAUyB,KAAK,IAAIT,GAAG,YAG9B,kBAAC,EAAD,QCgDGU,E,YA7DX,WAAYzF,GAAQ,IAAD,6BACf,4CAAMA,IAEF0E,KACA,EAAK1E,MAAM2E,QAAQC,KAAK,KAE5B,EAAK3E,MAAQ,CACTyF,MAAO,GACPC,SAAU,GACVC,UAAU,GAGd,EAAKC,SAAW,EAAKA,SAASzF,KAAd,gBAChB,EAAK0F,SAAW,EAAKA,SAAS1F,KAAd,gBAbD,E,sEAgBVH,GACLK,KAAKC,SAASN,K,iCAIdyE,EAAWqB,KAAKC,UAAU1F,KAAKL,QAC/BK,KAAKN,MAAM2E,QAAQC,KAAK,O,+BAGlB,IAAD,OACL,OACI,yBAAKpE,UAAU,iCACX,yBAAKA,UAAU,iDACX,yBAAKA,UAAU,cACX,2BAAOyF,QAAQ,SAAf,kBACA,2BAAOjB,KAAK,QACRxE,UAAU,eACV0F,YAAY,cACZ7F,MAAOC,KAAKL,MAAMyF,MAClBG,SAAU,SAACM,GAAD,OAAO,EAAKN,SAAS,CAAEH,MAAOS,EAAEC,OAAO/F,YAEzD,yBAAKG,UAAU,cACX,2BAAOyF,QAAQ,OAAf,aACA,2BAAOjB,KAAK,WACRxE,UAAU,eACV0F,YAAY,iBACZ7F,MAAOC,KAAKL,MAAM0F,SAClBE,SAAU,SAACM,GAAD,OAAO,EAAKN,SAAS,CAAEF,SAAUQ,EAAEC,OAAO/F,YAE5D,yBAAKG,UAAU,yBACX,2BAAOA,UAAU,oBACb,2BAAOA,UAAU,mBACbwE,KAAK,WACL3E,MAAOC,KAAKL,MAAM2F,SAClBC,SAAU,SAACM,GAAD,OAAO,EAAKN,SAAS,CAAED,SAAUO,EAAEC,OAAOC,aAJ5D,iBAOJ,4BAAQ7F,UAAU,kBAAkBI,QAAS,kBAAM,EAAKkF,aAAxD,gB,GAvDAjF,a,QCkBLyF,EAlBM,SAAC,GAAD,IAAczF,EAAd,EAAGoD,UAAyBqB,EAA5B,oCACjB,kBAAC,IAAD,iBACQA,EADR,CAEIiB,OAAQ,SAAAvG,GAAK,OACT0E,IACI,kBAAC7D,EAAcb,GAEX,kBAAC,IAAD,CACI+E,GAAI,CACAyB,SAAU,SACVvG,MAAO,CAAEuF,KAAMxF,EAAMJ,kBCIlC6G,EAXE,WACb,OACI,kBAAC,IAAD,CAAQC,SAAS,iBACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAAC3C,KAAK,SAASC,UAAWwB,IACtC,kBAAC,EAAD,CAAczB,KAAK,IAAIC,UAAWoB,OCFlDuB,IAASL,OAAO,kBAAC,EAAD,MAAcM,SAASC,eAAe,SlByHhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/E,MAAK,SAAAgF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3D,QAAQ2D,MAAMA,EAAMC,c","file":"static/js/main.0c0e6574.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Contador extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contador: 0\r\n        }\r\n\r\n        this.increment = this.increment.bind(this);\r\n    }\r\n\r\n    increment(value) {\r\n        let state = this.state;\r\n        state.contador += value;\r\n\r\n        this.setState(state);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"card \">\r\n                        <div className=\"card-body \">\r\n                            <h3 className=\"card-title\" style={{ textAlign: 'center' }}> {this.state.contador}</h3>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <button className=\"btn btn-primary\" style={{ marginRight: '10px' }} onClick={() => this.increment(-1)} >-</button>\r\n                            <button className=\"btn btn-primary\" onClick={() => this.increment(1)}>+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contador;\r\n","import React, { Component } from 'react';\r\n\r\nclass Timer extends Component {\r\n    interval\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            timer: new Date().toLocaleTimeString()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            this.setState({ timer: new Date().toLocaleTimeString() })\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h3>Timer: {this.state.timer}</h3>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","import axios from 'axios';\r\n\r\nconst source = axios.CancelToken.source();\r\n\r\nconst get = (url, config) => axios.get(url, { cancelToken: source.token, ...config });\r\nconst cancel = reason => source.cancel(reason);\r\n\r\n\r\nexport default {\r\n    get,\r\n    cancel\r\n}","import React, { Component } from 'react';\r\nimport http from '../../HttpClient';\r\n\r\nclass Http extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            persons: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        http\r\n            .get('https://jsonplaceholder.typicode.com/users')\r\n            .then(({ data: persons }) => this.setState({ persons }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        http.cancel('Operation canceled by the user.');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"card\">\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {this.state.persons.map(({ id, name }, i) => <li className={`list-group-item ${i % 2 === 0 ? 'list-group-item-secondary' : ''}`} key={id}>{name}</li>)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Http;","import React, { Component } from 'react';\r\nimport http from '../../HttpClient';\r\n\r\nimport './filmes.css'\r\n\r\nexport default class Filmes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filmes: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        http.get('https://sujeitoprogramador.com/r-api/?api=filmes')\r\n            .then(({ data: filmes }) => this.setState({ filmes }))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        http.cancel('Operation canceled by the user.');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            Filmes\r\n                        </div>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            {\r\n                                this.state.filmes.map(({ id, nome, foto }) => (\r\n                                    <li className=\"list-group-item\" key={id}>\r\n                                        <p>{nome}</p>\r\n                                        <img src={foto} className=\"img-thumbnail\" alt={nome}></img>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nfunction Sobre() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <h5>Está é uma aplicação feita com React, afim de estudos dos principais conceitos da biblioteca.</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sobre;","import React from 'react';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        <h1>Home</h1>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Pessoa extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pessoa: this.props.init\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        const min = 0;\r\n        const max = this.props.pessoas.length-1;\r\n\r\n        const idx = Math.floor(Math.random() * (max - min + 1) + min)\r\n        console.log(idx);\r\n\r\n        this.setState({ pessoa: this.props.pessoas[idx] });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row\" style={{ marginBottom: \"10px\" }}>\r\n                <div className=\"col\">\r\n                    <p>Nome: {this.state.pessoa}</p>\r\n                    <button className=\"btn btn-primary\" onClick={this.handleClick}>Alterar</button>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Contador from './Pages/Contador';\r\nimport Timer from './Pages/Timer';\r\nimport Http from './Pages/Http';\r\nimport Filmes from './Pages/Filmes';\r\nimport Sobre from './Pages/Sobre';\r\nimport Home from './Pages/Home';\r\nimport Exercicio from './Pages/Exercicio';\r\n\r\nexport default  [\r\n    { description: 'Home', path: '/home', component: Home },\r\n    { description: 'Contador', path: '/contador', component: Contador },\r\n    { description: 'Timer', path: '/timer', component: Timer },\r\n    { description: 'Http', path: '/http', component: Http },\r\n    { description: 'Filmes', path: '/filmes', component: Filmes },\r\n    { description: 'Exercício', path: '/exercicio', component: Exercicio },\r\n    { description: 'Sobre', path: '/sobre', component: Sobre }\r\n]\r\n\r\n","import React, { Component } from 'react'\r\nimport Pessoa from './pessoa';\r\n\r\nexport default class Excercicio extends Component {\r\n\r\n    pessoas = [\"Maria\", \"joão\", \"Lucas\", \"Pedro\"];\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h3>Exercício</h3>\r\n                    <hr />\r\n                    {\r\n                        this.pessoas.map((p, i) => <Pessoa key={p} pessoas={this.pessoas} init={this.pessoas[i]} />)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const sigin = (data) => localStorage.data = data;\r\nconst isAuthenticated = () => localStorage.getItem('data') !== null;\r\nconst sigout = () => localStorage.removeItem('data');\r\n\r\nexport default {\r\n    isAuthenticated,\r\n    sigin,\r\n    sigout\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Nav from '../Nav';\r\nimport Auth from '../Auth';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true,\r\n        };\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n    toggleNavbar() {\r\n        this.setState({ collapsed: !this.state.collapsed });\r\n    }\r\n\r\n    logout() {\r\n        Auth.sigout();\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    render() {\r\n        const collapsed = this.state.collapsed;\r\n        const classOne = collapsed ? 'collapse navbar-collapse' : 'collapse navbar-collapse show';\r\n        const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\r\n       \r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">Home</NavLink >\r\n                    <button onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className={`${classOne}`}>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {\r\n                                Nav.map(r => (\r\n                                    <li className=\"nav-item\" key={r.path}>\r\n                                        <NavLink className=\"nav-link\" to={`${r.path}`}>{r.description}</NavLink >\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                        <div className=\"navbar-nav\">\r\n                            <a style={{ cursor: \"pointer\" }} className=\"nav-item nav-link\" onClick={this.logout}>Logout</a>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Copyright © 2020 All rights reserved.</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Header from '../../Components/Header';\r\nimport Footer from '../../Components/Footer';\r\nimport Nav from '../../Nav';\r\n\r\nfunction DefaultLayout({ ...rest }) {\r\n    return (\r\n        <div>\r\n            <Header {...rest} />\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    {\r\n                        Nav.map(n => <Route path={n.path} component={n.component} key={n.description} />)\r\n                    }\r\n                    <Redirect from=\"*\" to=\"/home\" />\r\n                </Switch>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DefaultLayout;\r\n","import React, { Component } from 'react';\r\n\r\nimport Auth from '../../Auth';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        if (Auth.isAuthenticated())\r\n            this.props.history.push('/');\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            remember: false\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(state) {\r\n        this.setState(state);\r\n    }\r\n\r\n    onSubmit() {\r\n        Auth.sigin(JSON.stringify(this.state));\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-md-center\">\r\n                <div className=\"col-xl-3 col-lg-4 col-md-5 col-sm-6 col-xs-12\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email address:</label>\r\n                        <input type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter email\"\r\n                            value={this.state.email}\r\n                            onChange={(e) => this.onChange({ email: e.target.value })} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"pwd\">Password:</label>\r\n                        <input type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter password\"\r\n                            value={this.state.password}\r\n                            onChange={(e) => this.onChange({ password: e.target.value })} />\r\n                    </div>\r\n                    <div className=\"form-group form-check\">\r\n                        <label className=\"form-check-label\">\r\n                            <input className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                value={this.state.remember}\r\n                                onChange={(e) => this.onChange({ remember: e.target.checked })} /> Remember me\r\n                            </label>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" onClick={() => this.onSubmit()}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport Auth from './Auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            Auth.isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport DefaultLayout from './Layouts/DefaultLayout';\r\nimport Login from './Pages/Login';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst AppRoute = () => {\r\n    return (\r\n        <Router basename=\"curso-reactjs\">\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <PrivateRoute path=\"/\" component={DefaultLayout} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRoute;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport AppRoute from './AppRoute';\r\n\r\nReactDOM.render(<AppRoute />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}